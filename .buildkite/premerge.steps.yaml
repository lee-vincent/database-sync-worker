linux: &linux
  agents:
    - "capable_of_building=online-services"
    - "environment=production"
    - "permission_set=builder"
    - "platform=linux"  # if you need a different platform, configure this: macos|linux|windows.
    - "queue=${CI_LINUX_BUILDER_QUEUE:-v4-2020-01-02-bk5664-bc172f895ccea5a9}"
    - "scaler_version=2"
  timeout_in_minutes: 10
  retry:
    automatic:
        # This is designed to trap and retry failures because agent lost connection. Agent exits with -1 in this case.
      - exit_status: -1
        limit: 3

windows: &windows
  agents:
    - "capable_of_building=online-services"
    - "environment=production"
    - "permission_set=builder"
    - "platform=windows"  # if you need a different platform, configure this: macos|linux|windows.
    - "queue=${CI_WINDOWS_BUILDER_QUEUE:-v4-2020-01-02-bk5660-1fa9f56aa49f323c}"
    - "scaler_version=2"
  timeout_in_minutes: 10
  retry:
    automatic:
        # This is designed to trap and retry failures because agent lost connection. Agent exits with -1 in this case.
      - exit_status: -1
        limit: 3

# NOTE: step labels turn into commit-status names like {org}/{repo}/{pipeline}/{step-label}, lower-case and hyphenated.
# These are then relied on to have stable names by other things, so once named, please beware renaming has consequences.

dag: true

steps:
  # If run by CI directly, start a csharp-worker-template build.
  - label: "build-csharp-worker-template"
    trigger: "csharp-worker-template-premerge"
    if: build.env("ORIGINAL_BRANCH") == null
    build:
      branch: "${BUILDKITE_BRANCH}"
      env:
        ORIGINAL_BRANCH: "${BUILDKITE_BRANCH}"
        CSHARP_BUILD_ID: "${BUILDKITE_BUILD_ID}"
        CSHARP_JOB_ID: "${BUILDKITE_JOB_ID}"

  - label: "test-linux"
    id: "test-linux"
    if: build.env("ORIGINAL_BRANCH") != null
    command: "ci/bk/linux.sh"
    artifact_paths:
      - "/tmp/${BUILDKITE_BUILD_ID}/**/*"
    plugins:
      - ./.buildkite/plugins/setup-environment:
    <<: *linux

  - label: "build-windows"
    if: build.env("ORIGINAL_BRANCH") != null
    command: "powershell -NoProfile -NonInteractive -File ci/bk/build-win.ps1"
    artifact_paths:
      - "/tmp/${BUILDKITE_BUILD_ID}/**/*"
    <<: *windows

    # Wait for successful build on this pipeline before kicking off dependent pipelines.
  - wait

  - label: "annotate test results :pencil2:"
    depends_on:
      - step: "test-linux"
        allow_failure: true
    plugins:
      - improbable/test-summary#8301ac00fe128026db8179a5e1dd4092df41be6f:
          inputs:
            - label: ":octagonal_sign: Test failures "
              artifact_path: "tmp/${BUILDKITE_BUILD_ID}/*-tests/*"
              type: nunit
          formatter:
            type: details
    <<: *linux

    # Start the downstream build.
  - label: "build-database-sync-worker-example"
    trigger: "database-sync-worker-example-premerge"
    if: build.env("ORIGINAL_BRANCH") != null
    build:
      branch: "${ORIGINAL_BRANCH}"
      env:
        ORIGINAL_BRANCH: "{ORIGINAL_BRANCH}"
        CSHARP_BUILD_ID: "${BUILDKITE_BUILD_ID}"
        CSHARP_JOB_ID: "${BUILDKITE_JOB_ID}"

